import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, ContextTypes

logging.basicConfig(level=logging.INFO)

TOKEN = '–í–ê–®_–¢–û–ö–ï–ù_–ó–î–ï–°–¨'  # ‚Üê –∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω

menu_options = {
    "1": "üìå –í–∞—Ä–∏–∞–Ω—Ç 1: –†–∞–±–æ—Ç–∞ –Ω–∞ –ø—Ä–∏–≤—è–∑–∫—É\n\n–ú—ã –¥–∞—ë–º –º–∞–∫—Å–∏–º—É–º —Ä–æ–º–∞–Ω—Ç–∏–∫–∏, —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ–º –æ —Å–µ–±–µ, —Å–æ–∑–¥–∞—ë–º —Å–≤—è–∑—å. –¶–µ–ª—å ‚Äî –∑–∞–≤–µ—Å—Ç–∏ –º—É–∂—á–∏–Ω—É –Ω–∞ –ø–∏—Å—å–º–∞ —á–µ—Ä–µ–∑ –æ–ø—Ä–æ—Å –∏–ª–∏ —Ä–æ–º–∞–Ω—Ç–∏–∫—É, –∞ —Ç–∞–º —É–∂–µ –¥–µ—Ä–∂–∞—Ç—å –±–∞–ª–∞–Ω—Å!",
    "2": "üìå –í–∞—Ä–∏–∞–Ω—Ç 2: –†–∞–±–æ—Ç–∞ –≤–Ω–µ —Å–∞–π—Ç–∞\n\n–ï—Å–ª–∏ –º—É–∂—á–∏–Ω–∞ –Ω–µ –∏–¥—ë—Ç –Ω–∞ –ø—Ä–∏–≤—è–∑–∫—É, –ø—Ä–æ—Å–∏–º —É–π—Ç–∏ —Å —Å–∞–π—Ç–∞, –æ–±–º–µ–Ω–∏–≤–∞–µ–º—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏ —á–µ—Ä–µ–∑ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏–ª–∏ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É. –¢–∞–º –¥–µ–ª–∞–µ–º –∑–≤–æ–Ω–æ–∫ –∏ —É–¥–µ—Ä–∂–∏–≤–∞–µ–º –µ–≥–æ –≤—Å–µ–º–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ —Å—Ö–µ–º–∞–º–∏."
}

followup_schemes = {
    "manager": "üß† –°—Ö–µ–º–∞: –ü—Ä–æ–±–ª–µ–º–∞ / –ú–µ–Ω–µ–¥–∂–µ—Ä\n\n–†–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ–º –æ –ø—Ä–æ–±–ª–µ–º–∞—Ö, –≤–∏–∑–∞—Ö, –≤–æ–∑–≤—Ä–∞—Ç–∞—Ö ‚Äî –≤—Å—ë, —á—Ç–æ–±—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∑–∞–±–æ—Ç—É –∏ –≤–ª–æ–∂–µ–Ω–∏—è.",
    "health": "üè• –°—Ö–µ–º–∞: –ë–æ–ª—å–Ω–∏—Ü–∞ / –ë–æ–ª–µ–∑–Ω—å\n\n–ò—Å–ø–æ–ª—å–∑—É–µ–º —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ, —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ–º –æ —Å—Ä–æ—á–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º–∞—Ö —Å–æ –∑–¥–æ—Ä–æ–≤—å–µ–º.",
    "gifts": "üéÅ –°—Ö–µ–º–∞: –ü–æ–¥–∞—Ä–∫–∏ –∏ —Å–∞–π—Ç X\n\n–ü–æ–¥–∫–ª—é—á–∞–µ–º —Å–∞–π—Ç X –∏–ª–∏ –ø—Ä–æ—Å–∏–º –ø–æ–¥–∞—Ä–∫–∏ ‚Äî –≤—Å—ë –Ω–∞ —ç–º–æ—Ü–∏—è—Ö –∏ –∂–µ–ª–∞–Ω–∏–∏ –±—ã—Ç—å –±–ª–∏–∂–µ."
}


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("–í–∞—Ä–∏–∞–Ω—Ç 1: –ü—Ä–∏–≤—è–∑–∫–∞", callback_data='1')],
        [InlineKeyboardButton("–í–∞—Ä–∏–∞–Ω—Ç 2: –í–Ω–µ —Å–∞–π—Ç–∞", callback_data='2')],
        [InlineKeyboardButton("–°—Ö–µ–º–∞: –ú–µ–Ω–µ–¥–∂–µ—Ä", callback_data='manager')],
        [InlineKeyboardButton("–°—Ö–µ–º–∞: –ë–æ–ª—å–Ω–∏—Ü–∞", callback_data='health')],
        [InlineKeyboardButton("–°—Ö–µ–º–∞: –ü–æ–¥–∞—Ä–∫–∏", callback_data='gifts')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ö–æ—á–µ—à—å –ø–æ–∫–∞–∑–∞—Ç—å –∫–æ–º–∞–Ω–¥–µ üëá", reply_markup=reply_markup)


async def button(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    data = query.data
    if data in menu_options:
        await query.edit_message_text(text=menu_options[data])
    elif data in followup_schemes:
        await query.edit_message_text(text=followup_schemes[data])


if __name__ == '__main__':
    app = ApplicationBuilder().token("8073483621:AAEN5hE2U0_Za2Rbfs68Bp6prWMDekzxIpA").build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(button))
    app.run_polling()

