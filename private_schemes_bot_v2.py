import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, ContextTypes

logging.basicConfig(level=logging.INFO)

TOKEN = '8073483621:AAGQrD7Dd0kHuYDGDV6Sx9uItY1RY4ha9-U'  # ‚Üê –∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω

menu_options = {
    "1": "üìå –í–∞—Ä–∏–∞–Ω—Ç 1: –†–∞–±–æ—Ç–∞ –Ω–∞ –ø—Ä–∏–≤—è–∑–∫—É\n\n–ú—ã –¥–∞—ë–º –º–∞–∫—Å–∏–º—É–º —Ä–æ–º–∞–Ω—Ç–∏–∫–∏, —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ–º –æ —Å–µ–±–µ, —Å–æ–∑–¥–∞—ë–º —Å–≤—è–∑—å. –¶–µ–ª—å ‚Äî –∑–∞–≤–µ—Å—Ç–∏ –º—É–∂—á–∏–Ω—É –Ω–∞ –ø–∏—Å—å–º–∞ —á–µ—Ä–µ–∑ –æ–ø—Ä–æ—Å –∏–ª–∏ —Ä–æ–º–∞–Ω—Ç–∏–∫—É, –∞ —Ç–∞–º —É–∂–µ –¥–µ—Ä–∂–∞—Ç—å –±–∞–ª–∞–Ω—Å!",
    "2": "üìå –í–∞—Ä–∏–∞–Ω—Ç 2: –†–∞–±–æ—Ç–∞ –≤–Ω–µ —Å–∞–π—Ç–∞\n\n–ï—Å–ª–∏ –º—É–∂—á–∏–Ω–∞ –Ω–µ –∏–¥—ë—Ç –Ω–∞ –ø—Ä–∏–≤—è–∑–∫—É, –ø—Ä–æ—Å–∏–º —É–π—Ç–∏ —Å —Å–∞–π—Ç–∞, –æ–±–º–µ–Ω–∏–≤–∞–µ–º—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏ —á–µ—Ä–µ–∑ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏–ª–∏ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É. –¢–∞–º –¥–µ–ª–∞–µ–º –∑–≤–æ–Ω–æ–∫ –∏ —É–¥–µ—Ä–∂–∏–≤–∞–µ–º –µ–≥–æ –≤—Å–µ–º–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ —Å—Ö–µ–º–∞–º–∏."
}

followup_schemes = {
    "manager": "üß† –°—Ö–µ–º–∞: –ü—Ä–æ–±–ª–µ–º–∞ / –ú–µ–Ω–µ–¥–∂–µ—Ä\n\n–†–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ–º –æ –ø—Ä–æ–±–ª–µ–º–∞—Ö, –≤–∏–∑–∞—Ö, –≤–æ–∑–≤—Ä–∞—Ç–∞—Ö ‚Äî –≤—Å—ë, —á—Ç–æ–±—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∑–∞–±–æ—Ç—É –∏ –≤–ª–æ–∂–µ–Ω–∏—è.",
    "health": "üè• –°—Ö–µ–º–∞: –ë–æ–ª—å–Ω–∏—Ü–∞ / –ë–æ–ª–µ–∑–Ω—å\n\n–ò—Å–ø–æ–ª—å–∑—É–µ–º —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ, —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ–º –æ —Å—Ä–æ—á–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º–∞—Ö —Å–æ –∑–¥–æ—Ä–æ–≤—å–µ–º.",
    "gifts": "üéÅ –°—Ö–µ–º–∞: –ü–æ–¥–∞—Ä–∫–∏ –∏ —Å–∞–π—Ç X\n\n–ü–æ–¥–∫–ª—é—á–∞–µ–º —Å–∞–π—Ç X –∏–ª–∏ –ø—Ä–æ—Å–∏–º –ø–æ–¥–∞—Ä–∫–∏ ‚Äî –≤—Å—ë –Ω–∞ —ç–º–æ—Ü–∏—è—Ö –∏ –∂–µ–ª–∞–Ω–∏–∏ –±—ã—Ç—å –±–ª–∏–∂–µ."
}


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("–í–∞—Ä–∏–∞–Ω—Ç 1: –ü—Ä–∏–≤—è–∑–∫–∞", callback_data='1')],
        [InlineKeyboardButton("–í–∞—Ä–∏–∞–Ω—Ç 2: –í–Ω–µ —Å–∞–π—Ç–∞", callback_data='2')],
        [InlineKeyboardButton("–°—Ö–µ–º–∞: –ú–µ–Ω–µ–¥–∂–µ—Ä", callback_data='manager')],
        [InlineKeyboardButton("–°—Ö–µ–º–∞: –ë–æ–ª—å–Ω–∏—Ü–∞", callback_data='health')],
        [InlineKeyboardButton("–°—Ö–µ–º–∞: –ü–æ–¥–∞—Ä–∫–∏", callback_data='gifts')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ö–æ—á–µ—à—å –ø–æ–∫–∞–∑–∞—Ç—å –∫–æ–º–∞–Ω–¥–µ üëá", reply_markup=reply_markup)


async def button(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    data = query.data
    if data in menu_options:
        await query.edit_message_text(text=menu_options[data])
    elif data in followup_schemes:
        await query.edit_message_text(text=followup_schemes[data])


if __name__ == '__main__':
    app = ApplicationBuilder().token("8073483621:AAGQrD7Dd0kHuYDGDV6Sx9uItY1RY4ha9-U").build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(button))
    app.run_polling()




# –î–æ–±–∞–≤–∏–º –Ω–æ–≤—É—é –∫–Ω–æ–ø–∫—É –≤ –º–µ–Ω—é
menu_options["romantic"] = "‚ù§Ô∏è –ü—Ä–∏–≤—è–∑–∫–∞ ‚Äî –≤–ª—é–±–ª—è–µ–º, –ø–æ–¥–æ–≥—Ä–µ–≤–∞–µ–º –∏ –≤–µ–¥—ë–º –≤ –ø–∏—Å—å–º–∞ –∏ –±–∞–ª–∞–Ω—Å."

# –í–ª–æ–∂–µ–Ω–Ω–æ–µ –º–µ–Ω—é –¥–ª—è '‚ù§Ô∏è –ü—Ä–∏–≤—è–∑–∫–∞'
romantic_submenu = {
    "bonding_1_3": "üó£ –•–æ—Ä–æ—à–µ–µ –æ–±—â–µ–Ω–∏–µ 1‚Äì3 –¥–Ω—è",
    "bonding_3plus": "üíû –•–æ—Ä–æ—à–µ–µ –æ–±—â–µ–Ω–∏–µ 3+ –¥–Ω–µ–π"
}

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ inline-–∫–Ω–æ–ø–æ–∫
async def handle_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    data = query.data

    if data in menu_options:
        await query.edit_message_text(menu_options[data], reply_markup=main_menu_keyboard())

    elif data == "romantic":
        keyboard = [
            [InlineKeyboardButton(text=label, callback_data=key)]
            for key, label in romantic_submenu.items()
        ]
        keyboard.append([InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="main")])
        await query.edit_message_text("‚ù§Ô∏è –ü—Ä–∏–≤—è–∑–∫–∞:

–í—ã–±–µ—Ä–∏ —ç—Ç–∞–ø –æ–±—â–µ–Ω–∏—è:", reply_markup=InlineKeyboardMarkup(keyboard))

    elif data == "bonding_1_3":
        text = (
            "üó£ –•–æ—Ä–æ—à–µ–µ –æ–±—â–µ–Ω–∏–µ 1‚Äì3 –¥–Ω—è

"
            "üìå –¶–µ–ª—å ‚Äî —Å–æ–∑–¥–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å, –ø–æ–∫–∞–∑–∞—Ç—å —Å–µ–±—è, –ø–æ–¥–æ–≥—Ä–µ—Ç—å —Ñ–∞–Ω—Ç–∞–∑–∏—é, –Ω–æ –Ω–µ —Ñ–æ—Ä—Å–∏—Ä–æ–≤–∞—Ç—å –ø–∏—Å—å–º–∞.

"
            "üì∏ –§–æ—Ç–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å –∏—Å—Ç–æ—Ä–∏–µ–π:
"
            "‚Äî ¬´–ü—Ä–æ—Å–Ω—É–ª–∞—Å—å —Å —Ç–∞–∫–∏–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ–º‚Ä¶ ‚òï¬ª
"
            "‚Äî ¬´–õ—é–±–ª—é –≥—É–ª—è—Ç—å –æ–¥–Ω–∞, –Ω–æ —Å–µ–≥–æ–¥–Ω—è –Ω–µ —Ö–≤–∞—Ç–∞–ª–æ –∫–æ–≥–æ-—Ç–æ —Ä—è–¥–æ–º...¬ª

"
            "üé• –í–∏–¥–µ–æ –Ω–µ–º–Ω–æ–≥–æ, –Ω–æ –ø–æ —Ç–µ–º–µ.

"
            "üî• –ü–æ—Å–ª–µ –≤–∏–¥–µ–æ:
"
            "‚Äî ¬´–¢—ã –ø–æ—Å–º–æ—Ç—Ä–µ–ª? –Ø —Å–Ω–∏–º–∞–ª–∞ –µ–≥–æ —Å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ–º‚Ä¶¬ª
"
            "‚Äî ¬´–≠—Ç–æ —Ç–æ–ª—å–∫–æ –Ω–∞—á–∞–ª–æ... –•–æ—á–µ—à—å –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ? üòâ¬ª

"
            "‚ö†Ô∏è –ï—Å–ª–∏ –Ω–µ –æ—Ç–∫—Ä—ã–ª –≤–∏–¥–µ–æ:
"
            "‚Äî ¬´–ö–∞–∂–µ—Ç—Å—è, —Ç—ã –µ—â—ë –Ω–µ —Å–º–æ—Ç—Ä–µ–ª‚Ä¶ –ü–æ—Å–º–æ—Ç—Ä–∏, –∫–æ–≥–¥–∞ –±—É–¥–µ—à—å –æ–¥–∏–Ω?¬ª
"
            "‚Äî ¬´–°—Ç–∞–≤–ª—é —Å—Ç–∞–≤–∫—É ‚Äî —Ç—ã —É–ª—ã–±–Ω—ë—à—å—Å—è üòè¬ª"
        )
        await query.edit_message_text(text, reply_markup=InlineKeyboardMarkup([
            [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="romantic")]
        ]))

    elif data == "bonding_3plus":
        await query.edit_message_text("üíû –•–æ—Ä–æ—à–µ–µ –æ–±—â–µ–Ω–∏–µ 3+ –¥–Ω–µ–π (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)", reply_markup=InlineKeyboardMarkup([
            [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="romantic")]
        ]))

    elif data == "main":
        await query.edit_message_text("üìç –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=main_menu_keyboard())

# –ì–ª–∞–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
def main_menu_keyboard():
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("üìå –í–∞—Ä–∏–∞–Ω—Ç 1", callback_data="1")],
        [InlineKeyboardButton("üìå –í–∞—Ä–∏–∞–Ω—Ç 2", callback_data="2")],
        [InlineKeyboardButton("‚ù§Ô∏è –ü—Ä–∏–≤—è–∑–∫–∞", callback_data="romantic")]
    ])

# –î–æ–±–∞–≤–∏–º –Ω–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
application = ApplicationBuilder().token("8073483621:AAGQrD7Dd0kHuYDGDV6Sx9uItY1RY4ha9-U").build()
application.add_handler(CallbackQueryHandler(handle_callback))
application.add_handler(CommandHandler("start", lambda update, context: update.message.reply_text("üìç –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=main_menu_keyboard())))
application.run_polling()
